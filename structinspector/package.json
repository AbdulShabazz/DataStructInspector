{
	"name": "structinspector",
	"displayName": "StructInspector",
	"description": "An in-editor C++ struct inspector extension for Visual Studio Code",
	"version": "0.0.1",
	"publisher": "AbdulShabazz",
	"license": "GNU GPLv3",
	"author": "AbdulShabaaz",
	"icon": "logo2.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/AbdulShabaaz/DataStructInspector.git"
	},
	"engines": {
		"vscode": "^1.78.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cpp",
		"onLanguage:javascript",
		"onLanguage:python",
		"onLanguage:rust",
		"onLanguage:typescript"
	],
	"main": "extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.ShowInformationWindow",
				"title": "StructInspector: Information Window"
			},
			{
				"command": "extension.Enable32BitAlignment",
				"title": "StructInspector: Enable 32-Bit memory alignment"
			},
			{
				"command": "extension.Enable64BitAlignment",
				"title": "StructInspector: Enable 64-Bit memory alignment"
			}
		],
		"configuration": {
			"title": "Memory Alignment Scheme",
			"properties": {
				"memory_alignment.settings": {
					"type": "string",
					"default": "64-bit",
					"enum": ["16-bit", "32-bit", "64-bit"],
					"description": "Choose your memory alignment scheme.",
					"Memory_BoilerPlate":"Memory Layout (in bytes):", 
					"Memory_Rating_BoilerPlate":"Rating: ",
					"Memory_Rating":["Excellent","Average"],
					"Memory_Layout":"0       1       2       3       4       5       6       7       8", 
					"Memory_Layout_BarGraph":"|-------|-------|-------|-------|-------|-------|-------|-------|",
					"Memory_Layout_BarStop":"|",
					"unused":{
						"num_bytes":8,
						"memory_footprint_top":"-------|",
						"memory_footprint_top_no_barstop":"-------",
						"memory_footprint":"^unused(#)$|",
						"memory_footprint_bottom":"-------|",
						"memory_footprint_bottom_no_barstop":"-------",
						"Memory_footprint_BarStop":"|",
						"lpad":"",
						"rpad":""
					}
				},
				"platform_64bit":{
					"data_type":{
						"bool":{
							"num_bytes":1,
							"memory_footprint_top":"-------|",
							"memory_footprint":"^bool(1)$|",
							"memory_footprint_bottom":"-------|",
							"lpad":"",
							"rpad":""
						},
						"char":{
							"num_bytes":1,
							"memory_footprint_top":"-------|",
							"memory_footprint":"^char(1)$|",
							"memory_footprint_bottom":"-------|",
							"lpad":"",
							"rpad":""
						},
						"int":{
							"num_bytes":4,
							"memory_footprint_top":"------------|",
							"memory_footprint":"^int(4)$|",
							"memory_footprint_bottom":"------------|",
							"lpad":"",
							"rpad":""
						},
						"float":{
							"num_bytes":4,
							"memory_footprint_top":"------------|",
							"memory_footprint":"^float(4)$|",
							"memory_footprint_bottom":"------------|",
							"lpad":"",
							"rpad":""
						},
						"double":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^double(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long long":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long long(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"short":{
							"num_bytes":2,
							"memory_footprint_top":"----|",
							"memory_footprint":"^short(2)$|",
							"memory_footprint_bottom":"----|",
							"lpad":"",
							"rpad":""
						},
						"long double":{
							"num_bytes":16,
							"memory_footprint_top":"------------------------|",
							"memory_footprint":"^long double(16)$|",
							"memory_footprint_bottom":"------------------------|",
							"lpad":"",
							"rpad":""
						},
						"long int":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long int(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long long int":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long long int(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						}
					}
				},
				"platform_32bit":{
					"data_type":{
						"bool":{
							"num_bytes":1,
							"memory_footprint_top":"-------|",
							"memory_footprint":"^bool(1)$|",
							"memory_footprint_bottom":"-------|",
							"lpad":"",
							"rpad":""
						},
						"char":{
							"num_bytes":1,
							"memory_footprint_top":"-------|",
							"memory_footprint":"^char(1)$|",
							"memory_footprint_bottom":"-------|",
							"lpad":"",
							"rpad":""
						},
						"int":{
							"num_bytes":4,
							"memory_footprint_top":"------------|",
							"memory_footprint":"^int(4)$|",
							"memory_footprint_bottom":"------------|",
							"lpad":"",
							"rpad":""
						},
						"float":{
							"num_bytes":4,
							"memory_footprint_top":"------------|",
							"memory_footprint":"^float(4)$|",
							"memory_footprint_bottom":"------------|",
							"lpad":"",
							"rpad":""
						},
						"double":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^double(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long":{
							"num_bytes":4,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long(4)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long long":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long long(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"short":{
							"num_bytes":2,
							"memory_footprint_top":"----|",
							"memory_footprint":"^short(2)$|",
							"memory_footprint_bottom":"----|",
							"lpad":"",
							"rpad":""
						},
						"long double":{
							"num_bytes":16,
							"memory_footprint_top":"------------------------|",
							"memory_footprint":"^long double(16)$|",
							"memory_footprint_bottom":"------------------------|",
							"lpad":"",
							"rpad":""
						},
						"long int":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long int(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						},
						"long long int":{
							"num_bytes":8,
							"memory_footprint_top":"----------------|",
							"memory_footprint":"^long long int(8)$|",
							"memory_footprint_bottom":"----------------|",
							"lpad":"",
							"rpad":""
						}
					}
				}
			}
		}
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.78.0",
		"@vscode/test-electron": "^2.3.0",
		"eslint": "^8.39.0",
		"glob": "^8.1.0",
		"mocha": "^10.2.0",
		"typescript": "^5.0.4"
	}
}
